apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Chart.Version }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 180
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Chart.Version }}
    spec:
      initContainers:
      - name: init
        image: postgres:9.3-alpine
        command: ['bash', '-c', './scripts/init.sh']
        env:
        - name: PGHOST
          value: {{ .Values.app.db.host }}
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: user
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: password
        - name: DB_USERNAME
          value: {{ .Values.app.db.user }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-password
        - name: DB_NAME
          value: {{ .Values.app.db.name }}
        volumeMounts:
        - mountPath: /scripts
          name: couchdb-sync-init
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.app.repository }}:{{ .Values.app.tag | default .Chart.Version }}"
        ports:
        - containerPort: 8000
        args:
        - {{ .Values.app.command }}
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: X-Kubernetes-Health-Check
              value: livenessProbe
            - name: Host
              value: {{ .Chart.Name }}.{{ .Values.domain }}
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: X-Kubernetes-Health-Check
              value: check
            - name: Host
              value: {{ .Chart.Name }}.{{ .Values.domain }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        env:
        {{- if .Values.extra_env_vars -}}
        {{- range $key, $value := .Values.extra_env_vars }}
        - name: {{ $key }}
          value: {{ . | quote }}
        {{- end -}}
        {{ end }}
        - name: CAS_SERVER_URL
          value: {{ .Values.ums_url }}
        - name: CSRF_COOKIE_DOMAIN
          value: {{ .Values.domain }}
        - name: CSRF_TRUSTED_ORIGINS
          value: .{{ .Values.domain }}
        - name: HOSTNAME
          value: "{{ .Values.url_prefix }}.{{ .Values.domain }}"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-django-secret-key
        - name: DJANGO_STORAGE_BACKEND
          value: {{ .Values.app.django_storage_backend }}
        - name: ADMIN_USERNAME
          value: {{ .Values.app.admin_user }}
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-django-admin-password
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-django-token
        - name: AETHER_KERNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.kernel.secret }}
              key: admin-token
        - name: AETHER_KERNEL_URL
          value: {{ .Values.app.kernel.url }}
        - name: AETHER_KERNEL_URL_TEST
          value: {{ .Values.kernel_url_test }}
        - name: DEBUG
          value: {{ if .Values.debug }}"1"{{ else }}""{{ end }}
        - name: TESTING
          value: {{ if .Values.testing }}"1"{{ else }}""{{ end }}
        - name: PGUSER
          value: {{ .Values.app.db.user }}
        - name: PGPORT
          value: "5432"
        - name: PGHOST
          value: {{ .Values.app.db.host }}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-password
        - name: DB_NAME
          value: {{ .Values.app.db.name }}
        - name: WEB_SERVER_PORT
          value: {{ quote .Values.app.port }}
        - name: COUCHDB_URL
          value: {{ .Values.app.couchdb.url }}
        - name: COUCHDB_USER
          value: {{ .Values.app.couchdb.user }}
        - name: COUCHDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.couchdb.secret }}
              key: adminPassword
        - name: REDIS_HOST
          value: {{ .Values.app.redis.host }}
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: {{ .Values.app.redis.db }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.redis.secret }}
              key: redis-password
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: google-client-id
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
      - name: {{ .Chart.Name }}-rq-scheduler
        image: "{{ .Values.app.repository }}:{{ .Values.app.tag | default .Chart.Version }}"
        args:
        - {{ .Values.app.rq.command }}
        livenessProbe:
          exec:
            command:
            - ./entrypoint.sh
            - health_rq
          initialDelaySeconds: 5
          periodSeconds: 5
        imagePullPolicy: {{ .Values.pullPolicy }}
        env:
        {{- if .Values.extra_env_vars -}}
        {{- range $key, $value := .Values.extra_env_vars }}
        - name: {{ $key }}
          value: {{ . | quote }}
        {{- end -}}
        {{ end }}
        - name: CAS_SERVER_URL
          value: {{ .Values.ums_url }}
        - name: CSRF_COOKIE_DOMAIN
          value: {{ .Values.domain }}
        - name: CSRF_TRUSTED_ORIGINS
          value: {{ .Values.trusted_origins }}
        - name: HOSTNAME
          value: "{{ .Values.url_prefix }}.{{ .Values.domain }}"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-django-secret-key
        - name: DJANGO_STORAGE_BACKEND
          value: {{ .Values.app.django_storage_backend }}
        - name: ADMIN_USERNAME
          value: {{ .Values.app.admin_user }}
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-django-admin-password
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-django-token
        - name: AETHER_KERNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.kernel.secret }}
              key: admin-token
        - name: AETHER_KERNEL_URL
          value: {{ .Values.app.kernel.url }}
        - name: AETHER_KERNEL_URL_TEST
          value: {{ .Values.kernel_url_test }}
        - name: DEBUG
          value: {{ if .Values.debug }}"1"{{ else }}""{{ end }}
        - name: TESTING
          value: {{ if .Values.testing }}"1"{{ else }}""{{ end }}
        - name: PGUSER
          value: {{ .Values.app.db.user }}
        - name: PGPORT
          value: "5432"
        - name: PGHOST
          value: {{ .Values.app.db.host }}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-password
        - name: DB_NAME
          value: {{ .Values.app.db.name }}
        - name: WEB_SERVER_PORT
          value: {{ quote .Values.app.port }}
        - name: COUCHDB_URL
          value: {{ .Values.app.couchdb.url }}
        - name: COUCHDB_USER
          value: {{ .Values.app.couchdb.user }}
        - name: COUCHDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.couchdb.secret }}
              key: adminPassword
        - name: REDIS_HOST
          value: {{ .Values.app.redis.host }}
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: {{ .Values.app.redis.db }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.redis.secret }}
              key: redis-password
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: google-client-id
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
      - name: nginx
        image: nginx:stable-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
        - mountPath: /etc/nginx/conf.d
          name: couchdb-sync-nginx-config
      imagePullSecrets:
      volumes:
      - name: static-assets-volume
        emptyDir: {}
      - name: couchdb-sync-nginx-config
        configMap:
          name: couchdb-sync-nginx-config
      - name: couchdb-sync-init
        configMap:
          name: couchdb-sync-init
          defaultMode: 0744
      restartPolicy: Always
