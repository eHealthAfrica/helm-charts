apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Chart.Version }}
    heritage: {{ .Release.Service }}
spec:
  progressDeadlineSeconds: 180
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Chart.Version }}
    spec:
      initContainers:
      - name: init
        image: postgres:9.3-alpine
        command: ['bash', '-c', './scripts/init.sh']
        env:
        - name: PGHOST
          valueFrom :
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: host
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: user
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: password
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-name
        volumeMounts:
        - mountPath: /scripts
          name: couchdb-sync-init
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.app.data_mount }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.couchdbsync.repository }}:{{ .Values.couchdbsync.tag | default .Chart.AppVersion }}"
        ports:
        - containerPort: 8000
        args:
        - {{ .Values.app.command }}
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: X-Kubernetes-Health-Check
              value: livenessProbe
            - name: Host
              value: {{ .Values.url }}
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          httpGet:
            path: /health
            port: 8000
            httpHeaders:
            - name: X-Kubernetes-Health-Check
              value: check
            - name: Host
              value: {{ .Values.url }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        env:
        {{- if .Values.extra_env_vars -}}
        {{- range $key, $value := .Values.extra_env_vars }}
        - name: {{ $key }}
          value: {{ . | quote }}
        {{- end -}}
        {{ end }}
        - name: MEDIA_ROOT
          value: {{ .Values.app.data_mount }}
        - name: CAS_SERVER_URL
          value: "https://{{ .Values.ums_url }}.ehealthafrica.org"
        - name: CSRF_COOKIE_DOMAIN
          value: {{ .Values.domain }}
        - name: CSRF_TRUSTED_ORIGINS
          value: {{ .Values.trusted_origins }}
        - name: HOSTNAME
          value: "{{ .Values.url_prefix }}.{{ .Values.domain }}"
        - name: DJANGO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-django-secret-key
        - name: ADMIN_USERNAME
          value: {{ .Values.app.admin_user }}
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-admin-password
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-token
        - name: AETHER_KERNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: kernel-token
        - name: AETHER_KERNEL_URL
          value: {{ .Values.kernel_url }}
        - name: AETHER_KERNEL_URL_TEST
          value: {{ .Values.kernel_url_test }}
        - name: DEBUG
          value: {{ if .Values.debug }}"1"{{ else }}""{{ end }}
        - name: TESTING
          value: {{ if .Values.testing }}"1"{{ else }}""{{ end }}
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-user
        - name: PGPORT
          value: "5432"
        - name: PGHOST
          valueFrom :
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: host
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-sync-database-name
        - name: WEB_SERVER_PORT
          value: {{ quote .Values.webserverPort }}
        - name: COUCHDB_URL
          value: {{ .Values.couchdb.url }}
        - name: COUCHDB_USER
          value: {{ .Values.couchdb.user }}
        - name: COUCHDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: couchdb-password
        - name: REDIS_HOST
          value: {{ .Values.redis.host }}
        - name: REDIS_PORT
          value: {{ .Values.redis.port }}
        - name: REDIS_DB
          value: {{ .Values.redis.db }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: redis-password
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: google-client-id
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.app.data_mount }}
      - name: nginx
        image: nginx:stable-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
        - mountPath: /etc/nginx/conf.d
          name: couchdb-sync-nginx-config
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.app.data_mount }}
      - name: redis
        image: redis:alpine
        command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
        ports:
        - containerPort: 6379
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: redis-password
        volumeMounts:
        - mountPath: {{ .Values.couchdb.data_mount }}
          name: {{ .Chart.Name }}
      imagePullSecrets:
      - name: regsecret
      volumes:
      - name: {{ .Chart.Name }}
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
      - name: static-assets-volume
        emptyDir: {}
      - name: couchdb-sync-nginx-config
        configMap:
          name: couchdb-sync-nginx-config
      - name: couchdb-sync-init
        configMap:
          name: couchdb-sync-init
          defaultMode: 0744
      restartPolicy: Always
