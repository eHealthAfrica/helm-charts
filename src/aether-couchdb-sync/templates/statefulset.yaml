apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ .Values.couchdb.name }}
  labels:
    app: {{ .Values.couchdb.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.couchdb.clusterSize }}
  serviceName: {{ .Values.couchdb.name }}
  podManagementPolicy: {{ .Values.couchdb.podManagementPolicy }}
  selector:
    matchLabels:
      app: {{ .Values.couchdb.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.couchdb.name }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: couchdb
          image: "{{ .Values.couchdb.image.repository }}:{{ .Values.couchdb.image.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: couchdb
              containerPort: 5984
            - name: epmd
              containerPort: 4369
            - containerPort: 9100
          env:
            - name: COUCHDB_USER
              value: {{ .Values.couchdb.user }}
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.secret }}
                  key: couchdb-password
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.secret }}
                  key: couchdb-cookieAuthSecret
            - name: ERL_FLAGS
              value: "{{ range $k, $v := .Values.erlangFlags }} -{{ $k }} {{ $v }} {{ end }}"
          livenessProbe:
            httpGet:
              path: /
              port: 5984
          readinessProbe:
            httpGet:
              path: /_up
              port: 5984
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: database-storage
            mountPath: /opt/couchdb/data
          - name: couchdb-config
            mountPath: /usr/local/etc/couchdb
        - name: couchdb-statefulset-assembler
          image: "{{ .Values.couchdb.helperImage.repository }}:{{ .Values.couchdb.helperImage.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: COUCHDB_USER
              value: {{ .Values.couchdb.user }}
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.secret }}
                  key: couchdb-password
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      volumes:
      - name: couchdb-config
        configMap:
          name: couchdb-config
      - name: database-storage
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
