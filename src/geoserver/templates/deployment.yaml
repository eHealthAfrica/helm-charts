apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Chart.Version }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Chart.Version }}
    spec:
      initContainers:
      - name: init
        image: postgres:9.3-alpine
        command: ['bash', '-c', './scripts/init.sh']
        env:
        - name: PGHOST
          valueFrom :
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: host
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: user
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: password
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: geoserver-database-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: geoserver-database-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: geoserver-database-name
        volumeMounts:
        - mountPath: /scripts
          name: geoserver-init
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.app.data_mount }}
        {{ if .Values.provider.gcp }}
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
        {{ end }}
      containers:
      {{ if .Values.provider.gcp }}
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.database.instance }}=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      {{ end }}
      - name: {{ .Chart.Name }}
        image: "{{ .Values.app.repository }}:{{ .Values.app.tag | default .Chart.AppVersion }}"
        ports:
          - containerPort: {{ .Values.app.port }}
        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 10
          httpGet:
            path: /
            port: {{ .Values.app.port }}
            httpHeaders:
            - name: X-Kubernetes-Health-Check
              value: livenessProbe
            - name: Host
              value: {{ .Values.url }}
        readinessProbe:
          initialDelaySeconds: 120
          periodSeconds: 10
          httpGet:
            path: /
            port: {{ .Values.app.port }}
            httpHeaders:
            - name: X-Kubernetes-Health-Check
              value: check
            - name: Host
              value: {{ .Values.url }}
        imagePullPolicy: {{ .Values.app.pullPolicy }}
        env:
        - name: DEBUG
          value:  {{ if .Values.debug }}"1"{{ else }}""{{ end }}
        {{- if .Values.extra_env_vars -}}
        {{- range $key, $value := .Values.extra_env_vars }}
        - name: {{ $key }}
          value: {{ . | quote }}
        {{- end -}}
        {{ end }}
        - name: GEOSERVER_DATA_DIR
          value: {{ .Values.app.data_mount }}
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: geoserver-database-user
        - name: PGPORT
          value: "5432"
        - name: PGHOST
          valueFrom :
            secretKeyRef:
              name: {{ .Values.database.secret }}
              key: host
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: geoserver-database-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secret }}
              key: geoserver-database-name
        volumeMounts:
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.app.data_mount }}
      imagePullSecrets:
      - name: regsecret
      volumes:
      - name: {{ .Chart.Name }}
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
      - name: geoserver-init
        configMap:
          name: geoserver-init
          defaultMode: 0744
      {{ if .Values.provider.gcp }}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      {{ end }}
      restartPolicy: Always
