apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-{{ .Values.database.name }}
data:
{{- if .Values.provider.gcp }}
  provision.sh: |
    #!/bin/sh
    apk add --no-cache ca-certificates && update-ca-certificates
    wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /cloud_sql_proxy
    chmod +x /cloud_sql_proxy
    echo 8.8.8.8 >>/etc/resolv.conf
    echo "starting proxy in background"
    /cloud_sql_proxy -instances={{ .Values.database.instance }}=tcp:5432 -credential_file=/secrets/cloudsql/credentials.json &
    PROXY_PID=$!
    sleep 5
    if psql -lqt | cut -d \| -f 1 | grep -qw $DB_NAME; then
      echo "Database: ${DB_NAME} already exists. Skipping creation..."
      exit 0
    else
      psql -c "CREATE DATABASE $DB_NAME;"
      psql -c "CREATE USER $DB_USERNAME WITH PASSWORD '$DB_PASSWORD';"
      psql -c "ALTER USER $DB_USERNAME WITH CREATEROLE CREATEDB;"
      psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USERNAME;"
      psql -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $DB_USERNAME;"
      psql -c "GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $DB_USERNAME;"
      echo "sql executed.."
      sleep 5
      echo "stopping proxy"
      kill $PROXY_PID
    fi
{{ else }}
  provision.sh: |
    #!/bin/sh
    if psql -lqt | cut -d \| -f 1 | grep -qw $DB_NAME; then
      echo "Database: ${DB_NAME} already exists. Skipping creation..."
      exit 0
    else
      psql -c "CREATE DATABASE $DB_NAME;"
      psql -c "CREATE USER $DB_USERNAME WITH PASSWORD '$DB_PASSWORD';"
      psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USERNAME;"
    fi
{{- end -}}
