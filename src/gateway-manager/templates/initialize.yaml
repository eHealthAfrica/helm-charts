apiVersion: v1
kind: ConfigMap
metadata:
  name: initialize
data:
  initialize.sh: |
    #!/usr/bin/env bash
    set -Eeuo pipefail

    gwm="/code/entrypoint.sh"
    $gwm add_app keycloak

    $gwm add_realm $REALM \
      description="Tenant: $REALM" \
      login_theme=${LOGIN_THEME:-keycloak} \
      account_theme=${ACCOUNT_THEME:-keycloak} \
      admin_theme=${ADMIN_THEME:-keycloak} \
      email_theme=${EMAIL_THEME:-keycloak}

    $gwm add_public_client $REALM $KEYCLOAK_PUBLIC_CLIENT

    # create realm manager
    $gwm add_admin $REALM $INITIAL_SUPERUSER_USERNAME $INITIAL_SUPERUSER_PASSWORD

    # create users manager
    $gwm add_user $REALM $INITIAL_ADMIN_USERNAME $INITIAL_ADMIN_PASSWORD
    $gwm add_user_group $REALM $INITIAL_ADMIN_USERNAME "admin"

    # create simple user
    $gwm add_user $REALM $INITIAL_USER_USERNAME $INITIAL_USER_PASSWORD
    $gwm add_user_group $REALM $INITIAL_USER_USERNAME "user"

    SOLUTIONS={{ .Values.gw.solutions }}
    for solution in "${SOLUTIONS[@]}"; do
      if [[ "${RESET_REALM:-}" == "true" ]]; then
        $gwm remove_solution $solution $REALM
      fi

      # create a specific client per solution
      # (this allows to choose a different login theme or
      # disable a solution without disabling the whole realm)
      $gwm add_oidc_client $REALM "kong-$solution"
      $gwm add_solution $solution $REALM "kong-$solution"

      # create tenant database for PlanFeld solution
      if [[ $solution = "planfeld" ]]; then
        service_creds=${INITIAL_ADMIN_USERNAME}:${INITIAL_ADMIN_PASSWORD}
        service_url=${BASE_HOST}/${REALM}/planfeld/api/v1/tenant/
        curl --silent --show-error --fail -u $service_creds -X POST ${service_url}
      fi
    done

    # Elasticsearch
    $gwm add_elasticsearch_tenant "$REALM" 7
