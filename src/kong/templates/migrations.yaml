{{- if .Values.runMigrations }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "kong.fullname" . }}-init-migrations
  labels:
    app: {{ template "kong.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: init-migrations
spec:
  template:
    metadata:
      name: {{ template "kong.name" . }}-init-migrations
      labels:
        app: {{ template "kong.name" . }}
        release: "{{ .Release.Name }}"
        component: init-migrations
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
{{- if .Values.extraContainers }}
{{- with .Values.extraContainers }}
{{ tpl . $ | indent 6 }}
{{- end }}
{{- end }}
      - name: {{ template "kong.name" . }}-migrations
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: KONG_NGINX_DAEMON
          value: "off"
        {{- include "kong.env" .  | indent 8 }}
        {{- if .Values.postgresql.enabled }}
        - name: KONG_PG_HOST
          value: {{ .Values.postgresql.host }}
        - name: KONG_PG_PORT
          value: "{{ .Values.postgresql.service.port }}"
        - name: KONG_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgresql.secret }}
              key: database-password
        {{- end }}
        command: [ "/bin/sh", "-c", "kong migrations bootstrap" ]
      restartPolicy: OnFailure
{{- if .Values.extraVolumes }}
      volumes:
{{- with .Values.extraVolumes }}
{{ tpl . $ | indent 8 }}
{{- end }}
{{- end }}
{{- end }}
