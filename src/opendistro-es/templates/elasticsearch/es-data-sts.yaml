# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
{{ if .Values.elasticsearch.data.enabled }}
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
{{ include "opendistro-es.labels.standard" . | indent 4 }}
    role: data
  name: {{ template "opendistro-es.fullname" . }}-data
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ template "opendistro-es.fullname" . }}-data-svc
  replicas: {{ .Values.elasticsearch.data.replicas }}
  updateStrategy:
    type: {{ .Values.elasticsearch.data.updateStrategy }}
  template:
    metadata:
      labels:
{{ include "opendistro-es.labels.standard" . | indent 8 }}
        role: data
      annotations:
        {{/* This forces a restart if the secret config has changed */}}
        {{- if .Values.elasticsearch.config }}
        configchecksum: {{ include (print .Template.BasePath "/elasticsearch/es-config.yaml") . | sha256sum | trunc 63 }}
        {{- end }}
    spec:
{{- include "opendistro-es.imagePullSecrets" . | indent 6 }}
    {{- with .Values.elasticsearch.data.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.elasticsearch.data.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      initContainers:
      - name: init-sysctl
        image: {{ .Values.elasticsearch.initContainer.image }}:{{ .Values.elasticsearch.initContainer.imageTag }}
        command:
        - sysctl
        - -w
        - vm.max_map_count={{ .Values.elasticsearch.maxMapCount }}
        securityContext:
          privileged: true
      - name: fixmount
        command: [ 'sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data' ]
        image: busybox
        volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: data
      # Weighted anti-affinity to disallow deploying client node to the same worker node as master node
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  role: data
      {{- with .Values.elasticsearch.data.nodeAffinity }}
        nodeAffinity:
{{ toYaml . | indent 10 }}
      {{- end }}
      serviceAccountName: {{ template "opendistro-es.elasticsearch.serviceAccountName" . }}
      containers:
      - name: elasticsearch
        env:
        - name: cluster.name
          value: {{ .Values.global.clusterName }}
        - name: node.master
          value: "false"
        - name: node.ingest
          value: "false"
        - name: network.host
          value: "0.0.0.0"
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: discovery.seed_hosts
          value: {{ .Values.elasticsearch.discoveryOverride | default (printf "%s-discovery" (include "opendistro-es.fullname" .)) | quote }}
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: node.data
          value: "true"
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: {{ .Values.elasticsearch.data.javaOpts }}
{{- if .Values.elasticsearch.extraEnvs }}
{{ toYaml .Values.elasticsearch.extraEnvs | indent 8 }}
{{- end }}
        # Official Image from Open Distro Team
        image: {{ .Values.elasticsearch.image }}:{{ .Values.elasticsearch.imageTag }}
        imagePullPolicy: Always
        # only publish the transport port
        ports:
        - containerPort: 9300
          name: transport
        resources:
{{ toYaml .Values.elasticsearch.data.resources | indent 12 }}
    {{- with .Values.elasticsearch.data.readinessProbe}}
        readinessProbe:
{{ toYaml . | indent 10 }}
    {{- end }}
    {{- with .Values.elasticsearch.data.livenessProbe}}
        livenessProbe:
{{ toYaml . | indent 10 }}
    {{- end }}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
        {{- if .Values.elasticsearch.config }}
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        {{- end }}
        {{- if .Values.elasticsearch.log4jConfig }}
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/log4j2.properties
          name: config
          subPath: log4j2.properties
        {{- end }}
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/logging.yml
          name: config
          subPath: logging.yml
         {{- if and .Values.elasticsearch.ssl.transport.enabled .Values.elasticsearch.ssl.transport.existingCertSecret }}
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/transport-crt.pem
          name: transport-certs
          subPath: transport-crt.pem
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/transport-key.pem
          name: transport-certs
          subPath: transport-key.pem
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/transport-root-ca.pem
          name: transport-certs
          subPath: transport-root-ca.pem
         {{- end }}
         {{- if and .Values.elasticsearch.ssl.rest.enabled .Values.elasticsearch.ssl.rest.existingCertSecret }}
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/elk-rest-crt.pem
          name: rest-certs
          subPath: elk-rest-crt.pem
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/elk-rest-key.pem
          name: rest-certs
          subPath: elk-rest-key.pem
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/elk-rest-root-ca.pem
          name: rest-certs
          subPath: elk-rest-root-ca.pem
         {{- end }}
         {{- if and .Values.elasticsearch.ssl.admin.enabled .Values.elasticsearch.ssl.admin.existingCertSecret }}
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/admin-crt.pem
          name: admin-certs
          subPath: admin-crt.pem
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/admin-key.pem
          name: admin-certs
          subPath: admin-key.pem
        - mountPath: {{ .Values.elasticsearch.configDirectory }}/admin-root-ca.pem
          name: admin-certs
          subPath: admin-root-ca.pem
         {{- end }}
        - mountPath: /usr/share/elasticsearch/plugins/opendistro_security/securityconfig/config.yml
          name: security-config
          subPath: config.yml
      volumes:
      - name: config
        configMap:
          name: {{ template "opendistro-es.fullname" . }}-config
      {{- if and .Values.elasticsearch.ssl.transport.enabled .Values.elasticsearch.ssl.transport.existingCertSecret }}
      - name: transport-certs
        secret:
          secretName: {{ .Values.elasticsearch.ssl.transport.existingCertSecret }}
      {{- end }}
      {{- if and .Values.elasticsearch.ssl.rest.enabled .Values.elasticsearch.ssl.rest.existingCertSecret }}
      - name: rest-certs
        secret:
          secretName: {{ .Values.elasticsearch.ssl.rest.existingCertSecret }}
      {{- end }}
      {{- if and .Values.elasticsearch.ssl.admin.enabled .Values.elasticsearch.ssl.admin.existingCertSecret }}
      - name: admin-certs
        secret:
          secretName: {{ .Values.elasticsearch.ssl.admin.existingCertSecret }}
      {{- end }}
      - name: security-config
        configMap:
          name: {{ template "opendistro-es.fullname" . }}-security-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ ReadWriteOnce ]
      storageClassName: {{ .Values.elasticsearch.data.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.elasticsearch.data.storage }}
{{- end }}
