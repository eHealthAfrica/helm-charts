apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "odk.fullname" . }}
  labels:
    app: {{ template "odk.name" . }}
    chart: {{ template "odk.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "odk.name" . }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      {{ if .Values.kube2iam.enabled }}
      annotations:
        iam.amazonaws.com/role: {{ .Values.app.iam.role }}
      {{ end }}
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
      {{- include "aether-odk.initContainers" . | indent 6 }}
      containers:
      {{- include "aether-odk.extraContainers" . | indent 6 }}
      - name: odk
        image: "{{ .Values.app.repository }}:{{ .Values.app.tag | default .Chart.Version }}"
        ports:
        - containerPort: {{ .Values.app.port }}
        args:
        - {{ .Values.app.command }}
        {{- include "aether-odk.probes" . | indent 8 }}
        env:
        {{- include "aether-odk.env" . | indent 8 }}
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
        {{ if .Values.provider.gcp }}
        - mountPath: /secrets/gcp
          name: google-bucket-credentials
          readOnly: true
        {{ end }}
      {{ if .Values.imagePullSecrets.enabled }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
      {{ end }}
      volumes:
      - name: static-assets-volume
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: {{ .Chart.Name }}-nginx-config
      - name: odk-init
        configMap:
          name: {{ .Chart.Name }}-init
          defaultMode: 0744
      {{ if .Values.provider.gcp }}
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      - name: google-bucket-credentials
        secret:
          secretName: {{ .Values.app.storage.bucket.credentialsSecret }}
      {{ end }}
      restartPolicy: Always
