---
# Source: generic/templates/health-configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: aya-health
  labels:
    app: aya
    chart: generic-0.2.3
    release: release-name
    heritage: Tiller
data:
  liveness.sh: |-
echo "test test"

  readiness.sh: |-
echo "test test"


---
# Source: generic/templates/nginx-config-map.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: aya-nginx-config
data:
  default.conf: |
    server {
      access_log off;
      location /health {
        proxy_pass http://127.0.0.1:5432;
      }
    }
    server {
      server_name aya-dev.ehealthafrica.org;
      access_log  off;
      # Max upload size
      client_max_body_size 75M;   # adjust to taste

      location /static/ {
        alias /var/www/static;
      }
      # Finally, send all non-static requests to the Django server.
      location / {
        proxy_pass http://127.0.0.1:5432;
        proxy_set_header        Host               $host;
        proxy_set_header        X-Real-IP          $remote_addr;
        proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Host   $host:443;
        proxy_set_header        X-Forwarded-Server $host;
        proxy_set_header        X-Forwarded-Port   443;
        proxy_set_header        X-Forwarded-Proto  https;
        include    /etc/nginx/uwsgi_params; # or the uwsgi_params you installed manually
      }
    }


---
# Source: generic/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: aya
  labels:
    app: aya
    chart: generic-0.2.3
    release: release-name
    heritage: Tiller
spec:
  type: Ingress
  ports:
  - name: 
    port: 
    targetPort: 
    protocol: TCP
  selector:
    app: aya
    release: release-name

---
# Source: generic/templates/deployment.yaml

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: aya
  labels:
    app: aya
    chart: generic-0.2.3
    release: release-name
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aya
      release: release-name
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - aya
          topologyKey: "kubernetes.io/hostname"
  
  template:
    metadata:
      labels:
        app: aya
        release: release-name
    spec:
      
      containers:
      - name: openvpn-client
        image: ehealthafrica/openvpn-client:3.9.4
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        command: ["kano.ovpn"]
        volumeMounts:
          - name: kano-vpn
            mountPath: /etc/openvpn
            readOnly: true
          - name: dev-net-tun
            mountPath: /dev/net/tun
            readOnly: true
      
      
      - name: aya
        image: "eu.gcr.io/kdbs-data-col-proj/hfr-app:dev"
        imagePullPolicy: Always
        
        args:
          - "start"
        
        ports:
        - name: app
          containerPort: 5432
          protocol: TCP
        
        
        
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          exec:
            command:
            - sh
            - -c
            - liveness.sh 10
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          exec:
            command:
            - sh
            - -c
            - readiness.sh 10
        
        resources:
            {}
            
        
        env:
        
        volumeMounts:
        
        - mountPath: /var/www/static
          name: static-assets-volume
        
        
        
      
      - name: nginx
        image: nginx:stable-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
      
      
      imagePullSecrets:
      - name: gcr-json-key
      
      volumes:
      
      - name: static-assets-volume
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: aya-nginx-config
      
      
      
      
      
      - name: vpn-credentials
        secret:
          secretName: vpn-credentials
      
      restartPolicy: Always


---
# Source: generic/templates/ingress.yaml


---
# Source: generic/templates/init-config-map.yaml


---
# Source: generic/templates/pvc.yaml


---
# Source: generic/templates/statefulset.yaml


